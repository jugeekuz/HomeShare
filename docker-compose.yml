services:
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: userdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  ddns-updater:
    build: 
      context: ./ddns-updater
      dockerfile: ../dockerfiles/ddns-updater.dockerfile
    environment:
      - PING_INTERVAL=60
      - PING_URL=https://api.ipify.org?format=text
    env_file:
      - env/aws.env
      - env/ddns-updater.env
    tty: true
    stdin_open: true
    # volumes:
    #   - logs:/logs
  file-server:
    build: 
      context: ./file-server
      dockerfile: ../dockerfiles/file-server.dockerfile
    tty: true
    stdin_open: true
    ports:
      - "443:443"
    depends_on:
      - postgres
    volumes:
      - ./files:/app/uploads
      - ./temp:/app/temp
      - ./certs:/app/certs
      - ./secrets:/app/secrets

  web-interface-dev:
    build:
      context: ./web-interface
      dockerfile: ../dockerfiles/web-interface-dev.dockerfile
    ports:
      - "80:3001"
    volumes:
      - ./web-interface:/app
      - /app/node_modules
    tty: true
    stdin_open: true
    
  # web-interface:
  #   build:
  #     context: ./web-interface
  #     dockerfile: ../dockerfiles/web-interface.dockerfile
  #   ports:
  #     - "8080:80"


volumes:
  pgdata: